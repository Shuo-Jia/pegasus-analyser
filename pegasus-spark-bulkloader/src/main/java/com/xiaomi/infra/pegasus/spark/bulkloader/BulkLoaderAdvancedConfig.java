package com.xiaomi.infra.pegasus.spark.bulkloader;

import com.xiaomi.infra.pegasus.spark.FDSConfig;
import com.xiaomi.infra.pegasus.spark.HDFSConfig;

/**
 * This class support two options: enableSort and enableDistinct. Pegasus bulkload require the data
 * must be sorted and distinct by [hashKeyLength][hashKey][sortKey]. if you make sure that the source
 * data has been sorted or distinct base the rule, you can set them false to ignored the sort or
 * distinct process to decrease the time consuming. However, you may not should use the class generally.
 */
public class BulkLoaderAdvancedConfig extends BulkLoaderConfig {
    private boolean isDistinct = true;
    private boolean isSort = true;

    public BulkLoaderAdvancedConfig(HDFSConfig hdfsConfig, String clusterName, String tableName) {
        super(hdfsConfig, clusterName, tableName);
    }

    public BulkLoaderAdvancedConfig(FDSConfig fdsConfig, String clusterName, String tableName) {
        super(fdsConfig, clusterName, tableName);
    }

    /**
     * set whether to distinct the [hashKeyLength][hashKey][sortKey] of pegasus records generated by
     * resource data, please make sure you data whether has been distinct base the rule, otherwise,
     * don't set false.
     *
     * @param distinct true or false, default is "true"
     * @return this
     */
    public BulkLoaderConfig enableDistinct(boolean distinct) {
        isDistinct = distinct;
        return this;
    }

    /**
     * set whether to sort the [hashKeyLength][hashKey][sortKey] of pegasus records generated by
     * resource data, please make sure you data whether has been sorted base the rule, otherwise,
     * don't set false.
     *
     * @param sort true or false, default is "true"
     * @return this
     */
    public BulkLoaderConfig enableSort(boolean sort) {
        isSort = sort;
        return this;
    }

    public boolean enableDistinct() {
        return isDistinct;
    }

    public boolean enableSort() {
        return isSort;
    }

}
